000010*>
000020 IDENTIFICATION DIVISION.
000030 PROGRAM-ID.   Example3.
000040 ENVIRONMENT    DIVISION.
000050 CONFIGURATION  SECTION.
000051 INPUT-OUTPUT SECTION.
000052 FILE-CONTROL.
000053 		SELECT PRODUCT-FILE ASSIGN TO "PRODUCT_MASTER.txt"
000054 		ORGANIZATION IS LINE SEQUENTIAL.
000055 		
000056 		SELECT DATA-FILE ASSIGN TO "DATA_FILE.txt"
000057 		ORGANIZATION IS LINE SEQUENTIAL.
000058 		
000059 		SELECT LIST-FILE ASSIGN TO "LIST_PRODUCT.txt"
000060 		ORGANIZATION IS LINE SEQUENTIAL.
000061 		
000062 		SELECT NEW-PRODUCT-FILE ASSIGN TO "NEW_PRODUCT.txt"
000063 		ORGANIZATION IS LINE SEQUENTIAL.
000064 DATA DIVISION.
000065 FILE SECTION.
000066**********************
000067 FD PRODUCT-FILE.
000068 01 PRODUCT.
000069 		02 ID-P				PIC X(5).
000070 		02 NAME-P			PIC X(15).
000071 		02 AMOUNT-P	 		PIC 9(4).
000072 		02 AMOUNT-SAFE		PIC 9(4).
000073 		
000074 FD DATA-FILE.
000075 01 CHANGE-DATA.
000076 		02 ID-DATA			PIC X(5).
000077 		02 AMOUNT-IN		PIC 9(4).
000078 		02 AMOUNT-OUT		PIC 9(4).	
000079 		
000080 FD LIST-FILE.
000081 01 LIST-PRODUCT.
000082 		02 	LIST-WRITE 		PIC X(120).
000083 									
000084 FD NEW-PRODUCT-FILE.
000085 01 NEW-PRODUCT.
000086 		02 WRITE-PRODUCT	PIC X(80). 									
000087 WORKING-STORAGE SECTION.
000088 01 CHECK.
000089 		02 CHECK-EOF-P		PIC X(2).
000090 		02 CHECK-EOF-D		PIC X(2).
000091 		02 CHECK-DATA-USE	PIC X.
000092 01 AMOUNT-NEW			PIC 9(4)	VALUE ZERO.
000095 
000096 01 COUNT-RECORD-PAGE		PIC 99		VALUE ZERO.
000098 01 DISPLAY-PRODUCT-LIST.
000099 		02 					PIC X(9)	VALUE SPACE.
000100 		02 ID-P-L			PIC X(5).
000101 		02					PIC X(5)	VALUE SPACE.
000102 		02 NAME-P-L			PIC X(15).
000103 		02 					PIC X(5) 	VALUE SPACE.
000104 		02 AMOUNT-P-L		PIC z,zz9.
000105 		02					PIC X(7) 	VALUE SPACE.
000106 		02 AMOUNT-IN-L		PIC z,zz9	BLANK WHEN ZERO.
000107 		02					PIC X(6)	VALUE SPACE.
000108 		02 AMOUNT-OUT-L		PIC z,zz9	BLANK WHEN ZERO.
000109 		02					PIC X(7)	VALUE SPACE.
000110 		02 AMOUNT-NEW-L		PIC z,zz9	VALUE SPACE.
000111 		02					PIC X(7)	VALUE SPACE.
000112 		02 AMOUNT-SAFE-L	PIC z,zz9	BLANK WHEN ZERO.
000113 		02					PIC X(8)	VALUE SPACE.
000114 		02 ERROR-P-L		PIC X(3)	VALUE SPACE.
000115 		
000116 01 DISPLAY-LIST-TITLE.
000117 		02					PIC X(9)	VALUE SPACE.
000118 		02					PIC X(2)	VALUE "ID".
000119 		02					PIC X(8)	VALUE SPACE.			
000120 		02					PIC X(4)	VALUE "NAME".
000121 		02					PIC X(14)	VALUE SPACE.
000122 		02					PIC X(10)	VALUE "OLD_AMOUNT".
000123 		02					PIC X(2)	VALUE SPACE.	
000124 		02					PIC X(9)	VALUE "IN_AMOUNT".
000125 		02					PIC X(2)	VALUE SPACE.
000126 		02					PIC X(10)	VALUE "OUT_AMOUNT".
000127 		02					PIC X(2)	VALUE SPACE.
000128 		02					PIC X(10)	VALUE "NEW_AMOUNT".
000129 		02					PIC X(2)	VALUE SPACE.
000130 		02					PIC X(11)	VALUE "SAFE_AMOUNT".
000131 		02					PIC X(2)	VALUE SPACE.
000132 		02					PIC X(5)	VALUE "ERROR".
000133 		
000134 01 DISPLAY-LIST-FILE.
000135 		02					PIC X(40)	VALUE SPACE.
000136 		02					PIC X(35)	VALUE "* * * INVENTORY LIST * * *".			
000138 		
000139 01 DISPLAY-DATA-LIST.
000140 		02 					PIC X(8)	VALUE SPACE.
000141 		02					PIC X		VALUE "(".
000142 		02 DATA-LIST		PIC X(13).
000143 		02					PIC X		VALUE ")".					
000144  
000145 PROCEDURE DIVISION.
000146     OPEN INPUT PRODUCT-FILE DATA-FILE
000147     OPEN OUTPUT NEW-PRODUCT-FILE LIST-FILE
000148     MOVE 99 TO COUNT-RECORD-PAGE
000149     PERFORM PRODUCT-INPUT
000150     PERFORM DATA-INPUT
000151     
000152     PERFORM UNTIL CHECK-EOF-P = HIGH-VALUE
000153     		IF CHECK-EOF-D = HIGH-VALUE THEN
000154     		   MOVE "F" TO CHECK-DATA-USE
000156     		   PERFORM WRITE-LIST-PRODUCT
000157     		   PERFORM WRITE-NEW-PRODUCT
000158     		   PERFORM PRODUCT-INPUT
000159     		ELSE
000160     		   IF ID-P < ID-DATA THEN
000161     		   		MOVE "F" TO CHECK-DATA-USE
000163     		  		PERFORM WRITE-LIST-PRODUCT
000164     		  		PERFORM WRITE-NEW-PRODUCT
000165     		  		PERFORM PRODUCT-INPUT
000166     		   END-IF
000167     		   
000168     		   IF ID-P = ID-DATA THEN
000169     		   	   MOVE "T" TO CHECK-DATA-USE
000170     		       PERFORM WRITE-LIST-PRODUCT
000171     		       PERFORM WRITE-NEW-PRODUCT
000172     		       PERFORM PRODUCT-INPUT
000173     		       PERFORM DATA-INPUT
000174     		   END-IF
000175     		   
000176     		   IF ID-P > ID-DATA THEN
000177     		   		PERFORM WRITE-LIST-DATA		
000178     		   		PERFORM DATA-INPUT
000179     		   END-IF
000180     		   
000181     		END-IF
000182     		   
000183     END-PERFORM
000184     
000185     PERFORM UNTIL CHECK-EOF-D = HIGH-VALUE
000186     		PERFORM WRITE-LIST-DATA
000187     		PERFORM DATA-INPUT
000188     END-PERFORM
000189		     
000190     CLOSE PRODUCT-FILE DATA-FILE NEW-PRODUCT-FILE LIST-FILE
000191     STOP RUN.
000192     
000193**********************     
000194 PRODUCT-INPUT.
000195 		READ PRODUCT-FILE
000196		        AT END 
000197		         	MOVE HIGH-VALUE TO CHECK-EOF-P
000198		END-READ.
000199 END-PRODUCT-INPUT.
000200 
000201*********************
000202 DATA-INPUT.
000203 		READ DATA-FILE
000204		        AT END 
000205		         	MOVE HIGH-VALUE TO CHECK-EOF-D
000206		END-READ.
000207 END-DATA-INPUT.  
000208*********************** 		
000209 WRITE-LIST-PRODUCT.
000210 		PERFORM WRITE-LIST-TITLE
000211	 		IF CHECK-DATA-USE = "T" THEN
000212	 		    COMPUTE AMOUNT-NEW = AMOUNT-P + AMOUNT-IN
000213	 		IF AMOUNT-NEW <= AMOUNT-OUT THEN
000214	 		    MOVE 0 TO AMOUNT-NEW
000215	 		ELSE
000216	 		    COMPUTE AMOUNT-NEW = AMOUNT-NEW - AMOUNT-OUT
000217	 		END-IF
000218	 		MOVE AMOUNT-IN TO AMOUNT-IN-L
000219 			MOVE AMOUNT-OUT TO AMOUNT-OUT-L
000220 		ELSE
000221 			MOVE AMOUNT-P TO AMOUNT-NEW
000222 		    MOVE 0 TO AMOUNT-IN-L
000223 		    MOVE 0 TO AMOUNT-OUT-L
000224 		END-IF
000225 		
000226 		MOVE ID-P TO ID-P-L
000227 		MOVE NAME-P TO NAME-P-L
000228 		MOVE AMOUNT-P TO AMOUNT-P-L
000229 
000230 		
000236 		
000238 		MOVE AMOUNT-SAFE TO AMOUNT-SAFE-L
000239 		MOVE AMOUNT-NEW TO AMOUNT-NEW-L
000240 		
000241 		IF AMOUNT-NEW < AMOUNT-SAFE THEN
000242 		    MOVE "-*-"	TO ERROR-P-L
000243 		ELSE
000244 		    MOVE SPACE TO ERROR-P-L
000245 		END-IF
000246 
000247 		WRITE LIST-PRODUCT FROM DISPLAY-PRODUCT-LIST AFTER 2 LINE
000248 		COMPUTE COUNT-RECORD-PAGE = COUNT-RECORD-PAGE + 1.
000249 END-WRITE-LIST-PRODUCT.   
000250* 
000251********************
000252 WRITE-LIST-DATA.
000253 		PERFORM WRITE-LIST-TITLE
000254 		MOVE CHANGE-DATA TO DATA-LIST
000255 		WRITE LIST-PRODUCT FROM DISPLAY-DATA-LIST AFTER 2 LINE
000256 		COMPUTE COUNT-RECORD-PAGE = COUNT-RECORD-PAGE + 1.
000257 END-WRITE-LIST-DATA.
000258*
000259********************
000260 WRITE-NEW-PRODUCT.
000261 		MOVE AMOUNT-NEW TO AMOUNT-P
000262 		WRITE NEW-PRODUCT FROM PRODUCT.
000263 END-WRITE-NEW-PRODUCT.
000264* 
000265*******************
000266 WRITE-LIST-TITLE.
000267 		IF COUNT-RECORD-PAGE >= 20 THEN
000268 			MOVE 0 TO COUNT-RECORD-PAGE
000269 			MOVE SPACE TO LIST-PRODUCT
000270 			WRITE LIST-PRODUCT AFTER PAGE
000271 			WRITE LIST-PRODUCT FROM DISPLAY-LIST-FILE AFTER 5 LINE
000272 			WRITE LIST-PRODUCT FROM DISPLAY-LIST-TITLE AFTER 2 LINE
000273 		END-IF.
000274 END-WRITE-LIST-TITLE.	
000279 END PROGRAM Example3.