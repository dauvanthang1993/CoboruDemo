000100 @OPTIONS SSOUT(RESULT)
000200*=================================================================
000300*「データベース機能を使ったプログラム」
000400*    集団項目として定義したホスト変数を使用して、データベースの表
000500*  の複数の行を１度に操作します。
000600*
000700*=================================================================
000800****  注意事項  ****
000900*=================================================================
001000*     このプログラムでは、接続データベースとして
001100*     Microsoft(R) SQL Server(TM)を想定しています。
001200*     接続データベースとしてMicrosoft(R) SQL Server(TM)以外を
001300*     使用する場合、接続確認の処理を次のように変更してください。
001400*
001500*      000510 接続確認.
001600*      000520     IF SQLSTATE = "00000" THEN
001700*      000530*       SQLSTATE = "01000" THEN
001800*      000540       DISPLAY "接続に成功しました"
001900*      000550       DISPLAY " "
002000*      000560     ELSE
002100*      000570       GO TO P-END
002200*      000580     END-IF
002300*
002400*     Copyright 2000-2015 FUJITSU LIMITED
002500*=================================================================
002600 IDENTIFICATION DIVISION.
002700 PROGRAM-ID.    SAMPLE12.
002800 ENVIRONMENT    DIVISION.
002900 DATA           DIVISION.
003000 WORKING-STORAGE SECTION.
003100*=================================================================
003200*    ホスト変数宣言
003300*=================================================================
003400     EXEC SQL BEGIN DECLARE SECTION END-EXEC.
003500 01 在庫表 IS GLOBAL.
003600   02 製品番号   PIC S9(4) COMP-5 OCCURS 10.
003700   02 製品名     PIC X(20)        OCCURS 10.
003800   02 在庫数量   PIC S9(9) COMP-5 OCCURS 10.
003900   02 倉庫番号   PIC S9(4) COMP-5 OCCURS 10.
004000 01 SQLSTATE     PIC X(5)   IS GLOBAL.
004100 01 SQLMSG       PIC X(128) IS GLOBAL.
004200 01 SQLINFOA.
004300   02 SQLERRD    PIC S9(9) COMP-5 OCCURS 6.
004400     EXEC SQL END DECLARE SECTION END-EXEC.
004500 01 処理数        PIC S9(4) BINARY.
004600 PROCEDURE DIVISION.
004700*=================================================================
004800*  データベースに接続 (DEFAULTサーバに接続)します
004900*=================================================================
005000 P-START.
005100     EXEC SQL CONNECT TO DEFAULT END-EXEC.
005200* 接続確認
005300     IF SQLSTATE = "00000" OR
005400        SQLSTATE = "01000" THEN
005500       DISPLAY "接続に成功しました" UPON CONSOLE
005600       DISPLAY " "                  UPON CONSOLE
005700     ELSE
005800       GO TO P-END
005900     END-IF.
006000*=================================================================
006100*  例外事象が発生した場合の動作を指定します
006200*=================================================================
006300     EXEC SQL WHENEVER SQLERROR GO TO :P-END END-EXEC.
006400*=================================================================
006500*  操作を行う前のSTOCKテーブルの初期状態を表示します。
006600*=================================================================
006700     DISPLAY NC"処理前のテーブルの内容".
006800     DISPLAY " ".
006900     CALL "LIST_STOCK".
007000*=================================================================
007100*  複数行指定のホスト変数を用いて、製品名がTELEVISIONの製品番号を
007200*  １度に取得します。取得したデータの個数はSQLERRD(3)に返されます
007300*=================================================================
007400     DISPLAY  "製品名がTELEVISIONの行の製品番号を取り出します。"
007500                                                     UPON CONSOLE.
007600     EXEC SQL
007700       SELECT GNO FROM STOCK INTO :製品番号
007800           WHERE GOODS = 'TELEVISION'
007900     END-EXEC.
008000*=================================================================
008100*  取得した製品番号を使用して、在庫数の更新を行います。
008200*=================================================================
008300     DISPLAY  "以下の製品の在庫数量を10ずつ減少させます。"
008400                                                      UPON CONSOLE.
008500     PERFORM TEST BEFORE
008600       VARYING 処理数 FROM 1 BY 1
008700               UNTIL 処理数 > SQLERRD(3)
008800       DISPLAY "  TELEVISION -> " 製品番号(処理数) UPON CONSOLE
008900     END-PERFORM.
009000*
009100     EXEC SQL
009200       UPDATE STOCK SET QOH = QOH - 10
009300           WHERE GNO = :製品番号
009400     END-EXEC.
009500*=================================================================
009600*  製品名がRADIO, SHAVER, DRIERである行のデータを削除します。
009700*=================================================================
009800     DISPLAY  "製品名が'RADIO'、'SHAVER'、'DRIER'の行を削除します。"
009900                                                      UPON CONSOLE.
010000     MOVE "RADIO"  TO 製品名(1).
010100     MOVE "SHAVER" TO 製品名(2).
010200     MOVE "DRIER"  TO 製品名(3).
010300     EXEC SQL
010400       FOR 3
010500       DELETE FROM STOCK WHERE GOODS = :製品名
010600     END-EXEC.
010700*=================================================================
010800*  操作後のSTOCKテーブルの状態を表示します。
010900*=================================================================
011000     DISPLAY NC"処理後のテーブルの内容".
011100     DISPLAY " ".
011200     CALL "LIST_STOCK".
011300*=================================================================
011400*  例外事象が発生した場合の動作を無効化します。
011500*=================================================================
011600 P-END.
011700     EXEC SQL WHENEVER SQLERROR CONTINUE END-EXEC.
011800*=================================================================
011900*  トランザクションを終了し、接続を解除します。
012000*=================================================================
012100     IF SQLSTATE = "00000" THEN
012200       EXEC SQL COMMIT WORK END-EXEC
012300     ELSE
012400       DISPLAY NC"ＳＱＬ文の実行でエラーが発生しました。" UPON CONSOLE
012500       DISPLAY "       SQLSTATE : " SQLSTATE              UPON CONSOLE
012600       DISPLAY "       SQLMSG   : " SQLMSG                UPON CONSOLE
012700       EXEC SQL ROLLBACK WORK END-EXEC
012800     END-IF.
012900     EXEC SQL DISCONNECT DEFAULT END-EXEC.
013000 END-PROC.
013100     DISPLAY " "             UPON CONSOLE.
013200     DISPLAY NC"終了します"  UPON CONSOLE.
013300     STOP RUN.
013400/
013500*=================================================================
013600*
013700*  テーブルSTOCKに含まれる全データを取り出し表示します。
013800*
013900*=================================================================
014000 IDENTIFICATION DIVISION.
014100 PROGRAM-ID.    LIST_STOCK.
014200 DATA           DIVISION.
014300 WORKING-STORAGE SECTION.
014400     EXEC SQL BEGIN DECLARE SECTION END-EXEC.
014500 01 未処理件数   PIC S9(9) COMP-5.
014600 01 処理件数     PIC S9(9) COMP-5.
014700     EXEC SQL END DECLARE SECTION END-EXEC.
014800 01 行数         PIC S9(4) BINARY.
014900 01 カーソル状態 PIC 1(1) BIT.
015000 88 カーソルオープン VALUE B"1".
015100 01 データ件数   PIC 9(2).
015200 PROCEDURE     DIVISION.
015300*=================================================================
015400*  カーソルと例外発生時の処理を宣言します。
015500*=================================================================
015600     EXEC SQL
015700       DECLARE CUR1 CURSOR FOR SELECT * FROM STOCK
015800     END-EXEC.
015900     EXEC SQL WHENEVER SQLERROR GO TO :LIST-EXIT END-EXEC.
016000*=================================================================
016100*  テーブル中のデータ件数を集合関数COUNT(*)を用いて取得します。
016200*=================================================================
016300     EXEC SQL
016400       SELECT COUNT(*) INTO :未処理件数 FROM STOCK
016500     END-EXEC.
016600     EXEC SQL OPEN CUR1 END-EXEC.
016700     SET カーソルオープン TO TRUE.
016800*=================================================================
016900*  表指定ホスト変数とFOR句を使用して、複数行のデータを一度に取り
017000*  出して表示します。これを未処理の行がなくなるまで繰り返します
017100*=================================================================
017200     MOVE 0 TO データ件数.
017300     PERFORM TEST AFTER
017400               UNTIL 未処理件数 <= 0
017500       IF 未処理件数 > 10 THEN
017600         MOVE 10         TO 処理件数
017700       ELSE
017800         MOVE 未処理件数 TO 処理件数
017900       END-IF
018000       EXEC SQL
018100         FOR :処理件数
018200         FETCH CUR1 INTO  :在庫表
018300       END-EXEC
018400       PERFORM  TEST BEFORE
018500           VARYING 行数 FROM 1 BY 1
018600                   UNTIL 行数 > 処理件数
018700         COMPUTE データ件数 = データ件数 + 1
018800         DISPLAY データ件数 NC"件目のデータ："
018900         DISPLAY NC"　　　製品番号　＝　"  製品番号(行数)
019000         DISPLAY NC"　　　製品名　　＝　"  製品名(行数)
019100         DISPLAY NC"　　　在庫数量　＝　"  在庫数量(行数)
019200         DISPLAY NC"　　　倉庫番号　＝　"  倉庫番号(行数)
019300         DISPLAY  " "
019400       END-PERFORM
019500       COMPUTE 未処理件数 = 未処理件数 - 処理件数
019600     END-PERFORM.
019700     DISPLAY "全データ件数は" データ件数 "件です".
019800     DISPLAY  " ".
019900     MOVE "00000" TO SQLSTATE.
020000 LIST-EXIT.
020100*=================================================================
020200*  カーソルをＣＬＯＳＥします
020300*=================================================================
020400     IF カーソルオープン THEN
020500       EXEC SQL CLOSE CUR1 END-EXEC
020600     END-IF.
020700     MOVE LOW-VALUE TO 在庫表
020800 END PROGRAM  LIST_STOCK.
020900 END PROGRAM  SAMPLE12.
